var path = require('path');
var fs = require('fs');

var cacheBusterInfoJsonResources;
var _CACHE_BUSTER_FILE = "sap-ui-cachebuster-info.json";

function createCachebusterInfoJson(srcFolder, distFolder) {
	cacheBusterInfoJsonResources = {};
    //recursively add files to cache buster file,
	//therefore call createSapUICacheBusterInfoJsonResource with same value for srcFolder and currentFolder.
	createSapUICacheBusterInfoJsonResource(srcFolder, srcFolder, distFolder);
	var jsonCachebusterContent = JSON.stringify(cacheBusterInfoJsonResources, null, 2);
	fs.writeFileSync(path.join(distFolder, _CACHE_BUSTER_FILE), jsonCachebusterContent);
}


// Adds files to resources array in order to create the sap-ui-cachebuster-info.json file
function createSapUICacheBusterInfoJsonResource (srcFolder, currentFolder, distFolder) {
	var files = fs.readdirSync(currentFolder);
	for (var i = 0; i < files.length; i++) {
		var fileName = files[i];
		var filePath = path.join(currentFolder,fileName);
		if (fs.lstatSync(filePath).isDirectory()) {
			if (fileName != 'dist' && fileName != 'node_modules') {
				createSapUICacheBusterInfoJsonResource(srcFolder, filePath, distFolder);
			}
		}
		else {
			if (fileName !== _CACHE_BUSTER_FILE) {
				var lastModifiedTime = fs.lstatSync (filePath).mtime.getTime ();
                var relativeFileName = path.relative (srcFolder, filePath).replace(new RegExp('\\' + path.sep, 'g'), '/');
				cacheBusterInfoJsonResources[relativeFileName] = lastModifiedTime;
			}
		}
	}
};

function validateTaskOptions(grunt, task, taskOptions) {
	if (!taskOptions.src) {
        grunt.log.error(task.name + ' missing src configuration');
        return false;
	}
    if (!taskOptions.dest) {
        grunt.log.error(task.name + ' missing dest configuration');
        return false;
    }
    return true;
}

function getGruntConfiguredOptions(grunt) {
    return {
        src: grunt.config.get('dir.projectRoot'),
        dest: grunt.config.get('dir.dist'),
        parentDir: grunt.config.get('dir.parentDir')
    }
}

function getTaskOptions(originOptions) {
    var srcFolder = originOptions.src;
    var destDir = originOptions.dest;

    //For backward compatibility
    if (originOptions.parentDir) {
        if (originOptions.parentDir === ".") {
            destDir = originOptions.src;
        } else {
            srcFolder = originOptions.dest;
        }
    }
    return {
        src: srcFolder,
        dest: destDir
    };
}

module.exports = function(grunt) {
	grunt.registerTask('createsCachebusterInfoJson', 'Create sap-ui-cachebuster-info.json file', function() {
        //get tasks configured options or set default if not exists
        var originOptions = this.options(getGruntConfiguredOptions(grunt));
        var _options = getTaskOptions(originOptions);
        if (validateTaskOptions(grunt, this, _options)) {
            createCachebusterInfoJson(_options.src, _options.dest);
		}
	});
}




