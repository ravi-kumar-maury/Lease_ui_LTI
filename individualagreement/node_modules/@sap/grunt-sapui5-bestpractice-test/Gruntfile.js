module.exports = function(grunt) {
    "use strict";

    var config = {
        clean: {
            ui5: {
                src: ['./test/projects/ui5/node_modules', './test/projects/ui5/dist', './test/projects/ui5/package-lock.json']
            },
            results: {
                src: ['target','coverage','tests','testResults']
            }
        },
        shell: {
            setupIntegrationTests: {
                command: [
                    'npm run createtar',
                    'npm run renametar'
                ].join('&&')
            }
        },
        auto_install: {
            ui5: {
                options: {
                    cwd: './test/projects/ui5',
                    stderr: false,
                    failOnError: true,
                    npm: "--no-package-lock"
                }
            }
        },
        mochaTest: {
            units: {
                options: {
                    reporter: 'mocha-junit-reporter',
                    reporterOptions: {
                        mochaFile: 'testResults/TESTunits-index.xml'
                    },
                    colors: true,
                    summery: true,
                    captureFile: 'testResults/output.txt', // Optionally capture the reporter output to a file
                    quiet: false, // Optionally suppress output to standard out (defaults to false)
                    clearRequireCache: false // Optionally clear the require cache before running tests (defaults to false)
                },
                src: ['test/*Spec.js']
            },
            integrations: {
                options: {
                    reporter: 'mocha-junit-reporter',
                    reporterOptions: {
                        mochaFile: 'testResults/TESTIntegrations-index.xml'
                    },
                    colors: true,
                    summery: true,
                    captureFile: 'testResults/outputIntegrations.txt', // Optionally capture the reporter output to a file
                    quiet: false, // Optionally suppress output to standard out (defaults to false)
                    clearRequireCache: false // Optionally clear the require cache before running tests (defaults to false)
                },
                src: ['test/*Integration.js']
            },
        },
        eslint: {
            src: [
                "tasks/**/*.js"
            ],
            options: {
                configFile: "cfg/eslint.json",
                outputFile: "target/eslint.xml"
            }
        },
        mocha_istanbul: {
            src: ['test/*Spec.js' /*, 'test/!*Integration.js'*/ ],
            options: {
                timeout: 60000,
                print: 'summary',
                growlOnSuccess: true,
                excludes: ['node_modules/*'],
                check: {
                    branches: 61,
                    lines: 83,
                    statements: 83,
                    functions: 62
                },
                coverageFolder: "coverage/tests-grunt",
                reportFormats: ['cobertura', 'html']
            }
        },
    };

    grunt.config.merge(config);


    grunt.loadNpmTasks('grunt-mocha-test');
    grunt.loadNpmTasks("gruntify-eslint");
    grunt.loadNpmTasks('grunt-auto-install');
    grunt.loadNpmTasks('grunt-shell');
    grunt.loadNpmTasks('grunt-contrib-clean');
    grunt.loadNpmTasks('grunt-mocha-istanbul');

    grunt.registerTask('validations', [
        'eslint'
    ]);

    grunt.registerTask('unitTests', [
        'mochaTest:units'
    ]);

    grunt.registerTask('integrationTests', [
        'clean:ui5',
        'shell:setupIntegrationTests',
        'auto_install:ui5',
        'mochaTest:integrations'
    ]);

    //'integrationTests', also commented in mocha_istanbul
    grunt.registerTask('test-grunt-voter', [
        'clean',
        'unitTests',

        'mocha_istanbul'
    ]);

    grunt.registerTask('default', [
        'validations',
        'test-grunt-voter'
    ]);
};
